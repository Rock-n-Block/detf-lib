/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type DaoAdded = ContractEventLog<{
  account: string;
  0: string;
}>;
export type DaoRemoved = ContractEventLog<{
  account: string;
  0: string;
}>;

export interface DaoRole extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): DaoRole;
  clone(): DaoRole;
  methods: {
    isDao(account: string): NonPayableTransactionObject<boolean>;

    addDao(account: string): NonPayableTransactionObject<void>;

    renounceDao(): NonPayableTransactionObject<void>;
  };
  events: {
    DaoAdded(cb?: Callback<DaoAdded>): EventEmitter;
    DaoAdded(options?: EventOptions, cb?: Callback<DaoAdded>): EventEmitter;

    DaoRemoved(cb?: Callback<DaoRemoved>): EventEmitter;
    DaoRemoved(options?: EventOptions, cb?: Callback<DaoRemoved>): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "DaoAdded", cb: Callback<DaoAdded>): void;
  once(event: "DaoAdded", options: EventOptions, cb: Callback<DaoAdded>): void;

  once(event: "DaoRemoved", cb: Callback<DaoRemoved>): void;
  once(
    event: "DaoRemoved",
    options: EventOptions,
    cb: Callback<DaoRemoved>
  ): void;
}
