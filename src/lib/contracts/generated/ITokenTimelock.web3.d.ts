/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface ITokenTimelock extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): ITokenTimelock;
  clone(): ITokenTimelock;
  methods: {
    acceptAdmin(): NonPayableTransactionObject<void>;

    delay(): NonPayableTransactionObject<string>;

    GRACE_PERIOD(): NonPayableTransactionObject<string>;

    queuedTransactions(
      hash: string | number[]
    ): NonPayableTransactionObject<boolean>;

    cancelTransaction(
      target: string,
      value: number | string | BN,
      signature: string,
      data: string | number[],
      eta: number | string | BN
    ): NonPayableTransactionObject<void>;

    queueTransaction(
      target: string,
      value: number | string | BN,
      signature: string,
      data: string | number[],
      eta: number | string | BN
    ): NonPayableTransactionObject<string>;

    executeTransaction(
      target: string,
      value: number | string | BN,
      signature: string,
      data: string | number[],
      eta: number | string | BN
    ): PayableTransactionObject<string>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
